plugins {
    id 'groovy'
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.9.10'
}

group = "$artifact_group"
version = "$artifact_version.$build_number"

sourceCompatibility=JavaVersion.VERSION_1_8
targetCompatibility=JavaVersion.VERSION_1_8

// https://blogs.oracle.com/darcy/new-javac-warning-for-setting-an-older-source-without-bootclasspath
tasks.withType(JavaCompile) {
    options.forkOptions.jvmArgs.withDefault {
        "bootclasspath: ${System.properties.'java.home'}/lib/rt.jar"
    }
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile localGroovy()
    testCompile 'junit:junit:4.12'
}

gradlePlugin {
    plugins {
        'aspectj-gradle' {
            id = "$artifact_group"
            implementationClass = 'com.github.smac89.aspectj.AspectJPlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/smac89/aspectj-gradle'
    vcsUrl = 'https://github.com/smac89/aspectj-gradle.git'

    plugins {
        'aspectj-gradle' {
            id = "$artifact_group"
            displayName = 'Gradle AspectJ Plugin'
            description = "Gradle plugin for creating tasks for compiling aspects with aspectJ"
            version = project.version
            tags = ['aop', 'aspectj', 'weaving']
        }
    }
}

test {
    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
    }
    onOutput { descriptor, event ->
        logger.lifecycle("Test: $descriptor produced standard out/err: ${event.message}")
    }
}
